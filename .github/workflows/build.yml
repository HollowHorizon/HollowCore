name: build
on: 
  push:
    branches: [ 1.19.2 ]
  pull_request:
    branches: [ 1.19.2 ]

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [8] # Current Java LTS & minimum supported by Minecraft
        # and run on both Linux and Windows
        os: [ubuntu-20.04, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: build/libs/
      - name: Get main mc version from tag
        id: get_mc_version
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.RELEASE_NOTES_TOKEN }}
          result-encoding: string
          script: |
            return '${{ github.ref }}'.match(/refs\/tags\/(.*)\/v((.*)-(.*))/)[3];
      - name: Get file version from tag
        id: get_version
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.RELEASE_NOTES_TOKEN }}
          result-encoding: string
          script: |
            return '${{ github.ref }}'.match(/refs\/tags\/(.*)\/v((.*)-(.*))/)[4];
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: false
          name: hc-${{ steps.get_mc_version.outputs.result }}-${{ steps.get_version.outputs.result }}-${{ steps.get_release_type.outputs.result }}
          body: ${{ steps.changelog.outputs.changes }}
          token: ${{ github.token }}
          tag: ${{ github.ref }}
          artifacts: ./build/libs/hc-${{ steps.get_mc_version.outputs.result }}-${{ steps.get_version.outputs.result }}.jar
          artifactContentType: application/java-archive
