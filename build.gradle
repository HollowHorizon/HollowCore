buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
repositories {
    mavenCentral()
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

group = 'ru.hollowhorizon'
version = '1.0'
archivesBaseName = 'hc'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

configurations {
    shade
    compile.extendsFrom shade
}

minecraft {
    mappings channel: 'official', version: '1.16.5'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=hc.mixins.json"

            mods {
                hollowcore {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=hc.mixins.json"

            mods {
                hollowcore {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            
            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'hollowcore', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                hollowcore {
                    source sourceSets.main
                }
            }
        }
    }

    //srgExtra "PK: org/jsoup your/new/package/org/jsoup"
}

mixin {
    add sourceSets.main, "hc.refmap.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories { flatDir { dirs 'libs' } }

dependencies {
    annotationProcessor 'org.spongepowered:mixin:0.8.3:processor'
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.29'

    implementation fg.deobf('dev.latian.mods:itemfilters:1605.2.5')
    implementation fg.deobf('dev.latian.mods:ftblibrary:1605.3.4')
    implementation fg.deobf('dev.latian.mods:ftbquests:1605.3.6')
    implementation fg.deobf('dev.latian.mods:ftbteams:1605.2.3')
    implementation fg.deobf('me.shedaniel:architectury:1.30.53')
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "HollowCore",
                "Specification-Vendor"    : "HollowHorizon",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "MixinConfigs"            : "hc.mixins.json",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output)
}

jar.finalizedBy('reobfJar')

apply plugin: "java"
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
